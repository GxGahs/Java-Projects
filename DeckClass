
public class Deck 
{
    private Card[] deckOfCards;
    
    
    
    public Deck()
    {
        deckOfCards = new Card[52];
        for (int i = 0; i < 13; i++)
        {
            for (int j = 0; j < 4; j++)
            {
                deckOfCards[i*4+j] = new Card(i,j);
            }
        }
    }
    
    
    public String toString()
    {
    	String out = "";
        for (int i = 0; i < 52; i++)
            out += (deckOfCards[i].getCard()) + "\n";
        return out;
    }
    
    public void riffleShuffle(int repeat)
    {
    	for (int j = 0; j < repeat; j++)
    	{
	    	Card[] tempArray = new Card[52];
	    	for (int i = 0; i < 52; i++)
	    	{
	    		if (i%2==0)
	    			tempArray[i] = deckOfCards[i/2];
	    		else
	    			tempArray[i] = deckOfCards[26+(i-1)/2];
	    	}
	    	deckOfCards = tempArray;
    	}
    }
    
    public void randomReplaceShuffle(int repeat)
    {
    	for (int i = 0; i < repeat; i++)
    	{
    		 int rand1 = (int)(Math.random()*52),rand2 = (int)(Math.random()*52);
    		 while (rand2 == rand1)
    			 rand2 = (int)(Math.random()*52);
    		 Card tempCard;
    		 tempCard = deckOfCards[rand1];
    		 deckOfCards[rand1] = deckOfCards[rand2];
    		 deckOfCards[rand2] = tempCard;
    	}
    }
    
    public void multiShuffle(int doRep, int doRiff, int repeat)
    {
    	for (int i = 0; i < repeat; i++)
    	{
    			randomReplaceShuffle(doRep);
    			riffleShuffle(doRiff);
    	}
    }
    
    public void multiShuffle()
    {
    	for (int i = 0; i < 5; i++)
    	{
    			randomReplaceShuffle(10);
    			riffleShuffle(2);
    	}
    }
    
    
    // INNER CLASS CARD
    class Card
    {
        private int value;
        String suit,shownValue;
        private int[] cardValues = {1,2,3,4,5,6,7,8,9,10,11,12,13};
        private String[] suits = {"Hearts","Diamonds","Clubs","Spades"};
        private String[] shownValues = {"A","2","3","4","5","6","7","8","9","10","J","Q","K"};

        public Card()
        {
            value = cardValues[((int)(Math.random()*13))];
            suit = suits[(int)(Math.random()*4)];
            shownValue = shownValues[value-1];
        }
        
        public Card(int int1, int int2)
        {
            value = cardValues[int1];
            suit = suits[int2];
            shownValue = shownValues[value-1];
        }
        
        public String getCard()
        {
            return shownValue + " of " + suit;
        }
        
        public int getValue()
        {
            return value;
        }

        public int compareTo(Card o)
        {


            if (value - o.value < 0)
                return -1;
            else if (value - o.value > 0)
                return 1;
            else return 0;
        }
    }
}
